{"version":3,"sources":["user.js"],"names":[],"mappings":";;AAAA,IAAM,WAAW,QAAQ,UAAR,CAAjB;AACA,IAAM,SAAS,SAAS,MAAxB;AACA,IAAM,SAAS,QAAQ,eAAR,CAAf;;AAEA,IAAM,aAAa,IAAI,MAAJ,CAAW;AAC1B,WAAO,EAAE,MAAM,MAAR,EAAgB,QAAQ,IAAxB,EAA8B,WAAW,IAAzC,EADmB;AAE1B,cAAU,MAFgB;AAG1B,cAAU;AAHgB,CAAX,CAAnB;;AAMA;;AAEA;AACA,WAAW,GAAX,CAAe,MAAf,EAAuB,UAAS,IAAT,EAAe;AAClC;AACA,QAAM,OAAO,IAAb;;AAEA;AACA,WAAO,OAAP,CAAe,EAAf,EAAmB,UAAS,GAAT,EAAc,IAAd,EAAoB;AACnC,YAAG,GAAH,EAAQ;AACJ,mBAAO,KAAK,GAAL,CAAP;AACH;;AAED;AACA,eAAO,IAAP,CAAY,KAAK,QAAjB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,UAAS,GAAT,EAAc,IAAd,EAAoB;AACvD,gBAAG,GAAH,EAAQ;AACJ,uBAAO,KAAK,GAAL,CAAP;AACH;;AAED;AACA,iBAAK,QAAL,GAAgB,IAAhB;AACA;AACH,SARD;AASH,KAfD;AAgBH,CArBD;;AAwBA,IAAM,aAAa,SAAS,KAAT,CAAe,MAAf,EAAuB,UAAvB,CAAnB;;AAEA,OAAO,OAAP,GAAiB,UAAjB","file":"user-compiled.js","sourcesContent":["const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\nconst bcrypt = require('bcrypt-nodejs');\n\nconst userSchema = new Schema({\n    email: { type: String, unique: true, lowercase: true },\n    username: String,\n    password: String\n});\n\n//Encrypt on save hook\n\n//Run before saving user\nuserSchema.pre('save', function(next) {\n    //This is access to user model\n    const user = this;\n\n    //generate a salt then run callback\n    bcrypt.genSalt(10, function(err, salt) {\n        if(err) {\n            return next(err);\n        }\n\n        //hash password using salt\n        bcrypt.hash(user.password, salt, null, function(err, hash) {\n            if(err) {\n                return next(err)\n            }\n\n            //overwrite password with encrypted password\n            user.password = hash;\n            next();\n        })\n    })\n})\n\n\nconst ModelClass = mongoose.model('user', userSchema);\n\nmodule.exports = ModelClass;"]}