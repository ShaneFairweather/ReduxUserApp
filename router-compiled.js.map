{"version":3,"sources":["router.js"],"names":[],"mappings":";;AAAA,IAAM,iBAAiB,QAAQ,8BAAR,CAAvB;AACA,IAAM,kBAAkB,QAAQ,qBAAR,CAAxB;AACA,IAAM,WAAW,QAAQ,UAAR,CAAjB;AACA,IAAM,OAAO,QAAQ,eAAR,CAAb;AACA,IAAM,OAAO,QAAQ,eAAR,CAAb;;AAEA,IAAM,cAAc,SAAS,YAAT,CAAsB,KAAtB,EAA6B,EAAE,SAAS,KAAX,EAA7B,CAApB;AACA,IAAM,gBAAgB,SAAS,YAAT,CAAsB,OAAtB,EAA+B,EAAE,SAAS,KAAX,EAA/B,CAAtB;;AAGA,OAAO,OAAP,GAAiB,UAAS,GAAT,EAAc;AAC3B,QAAI,GAAJ,CAAQ,GAAR,EAAa,WAAb,EAA0B,UAAS,GAAT,EAAc,GAAd,EAAmB;AACzC,YAAI,IAAJ,CAAS,EAAE,SAAS,mBAAX,EAAT;AACH,KAFD;AAGA,QAAI,IAAJ,CAAS,SAAT,EAAoB,aAApB,EAAmC,eAAe,MAAlD;AACA,QAAI,IAAJ,CAAS,SAAT,EAAoB,eAAe,MAAnC;;AAEA,QAAI,GAAJ,CAAQ,QAAR,EAAkB,UAAS,GAAT,EAAc,GAAd,EAAmB;AACjC,aAAK,IAAL,CAAU,EAAV,EAAc,UAAS,GAAT,EAAc,KAAd,EAAqB;AAC/B,gBAAG,GAAH,EAAQ;AACJ,wBAAQ,GAAR,CAAY,GAAZ;AACH,aAFD,MAEO;AACH,oBAAI,IAAJ,CAAS,KAAT;AACH;AACJ,SAND;AAOH,KARD;;AAUA,QAAI,GAAJ,CAAQ,QAAR,EAAkB,UAAS,GAAT,EAAc,GAAd,EAAmB;AACjC,aAAK,IAAL,CAAU,EAAV,EAAc,UAAS,GAAT,EAAc,KAAd,EAAqB;AAC/B,gBAAG,GAAH,EAAQ;AACJ,wBAAQ,GAAR,CAAY,GAAZ;AACH,aAFD,MAEO;AACH,oBAAI,IAAJ,CAAS,KAAT;AACH;AACJ,SAND;AAOH,KARD;;AAUA,QAAI,GAAJ,CAAQ,YAAR,EAAsB,UAAS,GAAT,EAAc,GAAd,EAAmB;AACrC;AACA,YAAI,MAAJ,CAAW,YAAX;AACH,KAHD;;AAKA,QAAI,IAAJ,CAAS,UAAT,EAAqB,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC1C,gBAAQ,GAAR,CAAY,IAAI,IAAhB;AACA,YAAM,SAAS,IAAI,IAAJ,CAAS,MAAxB;AACA,YAAM,UAAU,IAAI,IAAJ,CAAS,OAAzB;AACA,YAAM,SAAS,IAAI,IAAJ,CAAS,MAAxB;AACA;AACA;;AAEA;AACA;AACA;;AAEI,YAAM,OAAO,IAAI,IAAJ,CAAS;AAClB,oBAAQ,MADU;AAElB,qBAAS,OAFS;AAGlB,oBAAQ;AAHU,SAAT,CAAb;;AAMA,aAAK,IAAL,CAAU,UAAS,GAAT,EAAc;AACpB,gBAAG,GAAH,EAAQ;AACJ,uBAAO,KAAK,GAAL,CAAP;AACH;AACD;AACA;AACA,gBAAI,IAAJ,CAAS,IAAT;AACA;AACH,SARD;AASH,KA3BL;AA6BH,CA7DD","file":"router-compiled.js","sourcesContent":["const Authentication = require('./controllers/authentication');\nconst passportService = require('./services/passport');\nconst passport = require('passport');\nconst User = require('./models/user');\nconst Post = require('./models/post');\n\nconst requireAuth = passport.authenticate('jwt', { session: false });\nconst requireSignin = passport.authenticate('local', { session: false });\n\n\nmodule.exports = function(app) {\n    app.get('/', requireAuth, function(req, res) {\n        res.send({ message: 'Code is activated' })\n    });\n    app.post('/signin', requireSignin, Authentication.signin);\n    app.post('/signup', Authentication.signup);\n\n    app.get(\"/users\", function(req, res) {\n        User.find({}, function(err, users) {\n            if(err) {\n                console.log(err)\n            } else {\n                res.send(users);\n            }\n        })\n    });\n\n    app.get(\"/posts\", function(req, res) {\n        Post.find({}, function(err, posts) {\n            if(err) {\n                console.log(err)\n            } else {\n                res.send(posts);\n            }\n        })\n    });\n\n    app.get(\"/users/:id\", function(req, res) {\n        // res.send(\"These are the user screens\");\n        res.render('index.html');\n    });\n\n    app.post('/addpost', function(req, res, next) {\n        console.log(req.body);\n        const author = req.body.author;\n        const content = req.body.content;\n        const avatar = req.body.avatar;\n        // const author = \"testing testing\";\n        // const content = \"testing final\";\n\n        // if(!author || !content) {\n        //     return res.status(422).send({error: 'You must provide post content'})\n        // }\n\n            const post = new Post({\n                author: author,\n                content: content,\n                avatar: avatar\n            });\n\n            post.save(function(err) {\n                if(err) {\n                    return next(err);\n                }\n                //creation success response\n                // res.send(\"Post added\");\n                res.send(post);\n                // res.json({ token: tokenForUser(user) });\n            });\n        });\n\n}\n\n"]}