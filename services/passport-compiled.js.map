{"version":3,"sources":["passport.js"],"names":[],"mappings":";;AAAA,IAAM,WAAW,QAAQ,UAAR,CAAjB;AACA,IAAM,OAAO,QAAQ,eAAR,CAAb;AACA,IAAM,SAAS,QAAQ,WAAR,CAAf;AACA,IAAM,cAAc,QAAQ,cAAR,EAAwB,QAA5C;AACA,IAAM,aAAa,QAAQ,cAAR,EAAwB,UAA3C;;AAEA;AACA,IAAM,aAAa;AACf;AADe,CAAnB;;AAIA;AACA,IAAM,WAAW,IAAI,WAAJ,CAAgB,UAAhB,EAA4B,UAAS,OAAT,EAAkB,IAAlB,EAAwB;AACjE;;AAEA;;AAEA;AACA,SAAK,QAAL,CAAc,QAAQ,GAAtB,EAA2B,UAAS,GAAT,EAAc,IAAd,EAAoB;AAC3C,YAAG,GAAH,EAAQ;AAAE,mBAAO,KAAK,GAAL,EAAU,KAAV,CAAP;AAAyB;;AAEnC,YAAG,IAAH,EAAS;AACL,iBAAK,IAAL,EAAW,IAAX;AACH,SAFD,MAEO;AACH,iBAAK,IAAL,EAAW,KAAX;AACH;AAGJ,KAVD;AAWH,CAjBgB,CAAjB;;AAmBA","file":"passport-compiled.js","sourcesContent":["const passport = require('passport');\nconst User = require('../model/user');\nconst config = require('../config');\nconst JwtStrategy = require('passport-jwt').Strategy;\nconst ExtractJwt = require('passport-jwt').ExtractJwt;\n\n//jwt configuration\nconst jwtOptions = {\n    jwtFromRequest\n};\n\n//create jwt strategy\nconst jwtLogin = new JwtStrategy(jwtOptions, function(payload, done) {\n    //see if userid in payload exists in database\n\n    //call done with user\n\n    //call done without user\n    User.findById(payload.sub, function(err, user) {\n        if(err) { return done(err, false) }\n\n        if(user) {\n            done(null, user);\n        } else {\n            done(null, false);\n        }\n\n\n    })\n});\n\n//tell passport to use jwt"]}